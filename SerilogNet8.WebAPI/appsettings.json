{
  //"Logging": {
  //  "LogLevel": {
  //    "Default": "Information",
  //    "Microsoft.AspNetCore": "Warning"
  //  }
  //},
  "Serilog": {
    "Using": [ "Serilog.Sinks.Debug", "Serilog.Sinks.Console", "Serilog.Sinks.File", "Serilog.Expressions", "Serilog.Enrichers.ClientInfo" ],
    "Enrich": [
      "FromLogContext",
      "WithMachineName",
      "WithThreadId",
      "WithClientIp",
      "WithCorrelationId",
      {
        "Name": "WithRequestHeader",
        "Args": { "headerName": "User-Agent" }
      }
    ],
    "MinimumLevel": {
      "Default": "Verbose",
      "Override": {
        "Microsoft.AspNetCore": "Information",
        "Microsoft": "Information",
        "System": "Information"
      }
    },
    "WriteTo": [
      {
        "Name": "File",
        "Args": {
          "path": "Logs/Everythinglog-.txt",
          "rollingInterval": "Day",
          "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff} [{Level:u3}] {ClientIp} {SourceContext} - {Message:lj}{NewLine}{Exception}"
        }
      },
      {
        "Name": "Console",
        "Args": {
          //"outputTemplate": "[{Timestamp:yyyy:MM:dd hh:mm:ss} {CorrelationId} {Level:u3}] {Message:lj}{NewLine}{Exception}",
          //"outputTemplate": "[{Timestamp:yyyy:MM:dd hh:mm:ss} {CorrelationId} {Level:u3}] [{Level}] Th:{ThreadId} {ThreadName} {Message:lj}{NewLine}{Exception}",
          "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff} [{Level:u3}] {ClientIp} {SourceContext} {Substring(SourceContext, LastIndexOf(SourceContext, '.') + 1)} Th:{ThreadId} {ThreadName} {Message:lj}{NewLine}{Exception}",
          //"template": "{@t:HH:mm:ss} - {@l:u} - {Substring(SourceContext, LastIndexOf(SourceContext, '.') + 1)}: {@m}\\n{@x}",
          "restrictedToMinimumLevel": "Debug",
          "Filter": [
            {
              "Name": "ByIncludingOnly",
              "Args": {
                // "expression": "Level = 'Debug'" //"StartsWith(SourceContext,'Microsoft.EntityFrameworkCore.ChangeTracking')",
                "expression": "StartsWith(SourceContext,'SerilogNet8.WebAPI')"
              }
            }
          ]
        }
      },
      {
        "Name": "File",
        "Args": {
          "path": "Logs/log-HTTP-.txt",
          "rollingInterval": "Day",
          "retainedFileCountLimit": 31,
          // "buffered": false,
          "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff} [{Level:u3}] {ClientIp} {Properties} {Message:lj} {NewLine}{Exception}",
          //"restrictedToMinimumLevel": "Debug",
          "Filter": [
            {
              "Name": "ByIncludingOnly",
              "Args": {
                //"expression": "Lvl='INF'"
                "expression": "RequestPath like '/WeatherForecast%' or @l='WRN'"
              }
            }
          ]
        }

      },
      {
        "Name": "File",
        "Args": {
          "path": "Logs/log-API-.txt",
          "rollingInterval": "Day",
          "retainedFileCountLimit": 31,
          //"buffered": false,
          "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff} [{Level:u3}] {ClientIp} {Properties} {Message:lj} {NewLine}{Exception}",
          "restrictedToMinimumLevel": "Debug",
          "Filter": [
            {
              "Name": "ByIncludingOnly",
              "Args": {
                "expression": "SourceContext like 'Microsoft.AspNetCore%' ci"
              }
            }
          ]
        }

      },
      {
        "Name": "Logger",
        "Args": {
          "configureLogger": {
            "Filter": [
              {
                //"ByExcluding": null,
                "Name": "ByIncludingOnly",
                "Args": {
                  "expression": "RequestPath like '/WeatherForecast%' and @l='Error' "
                }
              }
            ],
            "WriteTo": [
              {
                "Name": "File",
                "rollingInterval": "Day",
                "Args": {
                  "path": "Logs/log-API-FilteredLog-.txt",
                  "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff} [{Level:u3}] {ClientIp} {Properties} {Message:lj} {NewLine}{Exception}"
                }
              }
            ]
          }
        }
      },
      {
        "Name": "Logger",
        "Args": 
        {
          "configureLogger": 
          {
            "Filter": [
              {
                "Name": "ByIncludingOnly",
                "Args": {
                  "expression": "@l in ['Error', 'Fatal', 'Warning'] and StartsWith(SourceContext, 'SerilogNet8')"
                }
              }
            ],
            "WriteTo":[
              {
                "Name": "File",
                "Args": {
                  "path": "Logs/log-API-ErrorLog-.txt",
                  "rollingInterval": "Day",
                  "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff} [{Level:u3}] {ClientIp} {Properties} {Message:lj} {NewLine}{Exception}",
                  "formatter": "Serilog.Formatting.Compact.CompactJsonFormatter, Serilog.Formatting.Compact"
                }
              }
            ]
           }
         }        
      }          
    ]
  },
  "AllowedHosts": "*"
}



 //"Serilog": {
 //   "Using": [ "Serilog.Sinks.MSSqlServer" ],
 //   "MinimumLevel": "Information",
 //   "WriteTo": [
 //     {
 //       "Name": "MSSqlServer",
 //       "Args": {
 //         "connectionString": "Data Source=XXX; Database=YYY; Integrated Security=True; TrustServerCertificate=true;",
 //         "sinkOptionsSection": {
 //           "tableName": "Logging",
 //           "autoCreateSqlDatabase": false,
 //           "autoCreateSqlTable": true
 //         },
 //         "columnOptionsSection": {
 //           "additionalColumns": [
 //             {
 //               "columnName": "RequestMethod",
 //               "dataType": "nvarchar",
 //               "dataLength": "8"
 //             },
 //             {
 //               "columnName": "StatusCode",
 //               "dataType": "Int"
 //             },
 //             {
 //               "columnName": "MachineName",
 //               "dataType": "nvarchar",
 //               "dataLength": "32"
 //             },
 //             {
 //               "columnName": "EnvironmentName",
 //               "dataType": "nvarchar",
 //               "dataLenght": "32"
 //             },
 //             {
 //               "columnName": "EnvironmentUserName",
 //               "dataType": "nvarchar",
 //               "dataLenght": "32"
 //             },
 //             {
 //               "columnName": "ClientIp",
 //               "dataType": "nvarchar",
 //               "dataLenght": "64"
 //             },
 //             {
 //               "columnName": "ThreadId",
 //               "dataType": "int"
 //             },
 //             {
 //               "columnName": "ThreadName",
 //               "dataType": "nvarchar",
 //               "dataLenght": "32"
 //             },
 //             {
 //               "columnName": "ProcessId",
 //               "dataType": "int"
 //             },
 //             {
 //               "columnName": "ProcessName",
 //               "dataType": "nvarchar",
 //               "dataLenght": "64"
 //             }
 //           ]
 //         }
 //       }
 //     }
 //   ],
 //   "Filter": [
 //     {
 //       "Name": "ByExcluding",
 //       "Args": {
 //         "expression": "Contains(@m, 'health')"
 //       }
 //     },
 //     {
 //       "Name": "ByExcluding",
 //       "Args": {
 //         "expression": "Contains(@m, 'Health_Homol')"
 //       }
 //     },
 //     {
 //       "Name": "ByExcluding",
 //       "Args": {
 //         "expression": "Contains(@m, 'swagger')"
 //       }
 //     }
 //   ],
 //   "Enrich": [
 //     "FromLogContext",
 //     "WithMachineName",
 //     "WithEnvironmentName",
 //     "WithEnvironmentUserName",
 //     "WithThreadId",
 //     "WithThreadName",
 //     "WithClientIp",
 //     "WithProcessId",
 //     "WithProcessName"
 //   ],

 //   "Properties": {
 //     "Application": "Api"
 //   }